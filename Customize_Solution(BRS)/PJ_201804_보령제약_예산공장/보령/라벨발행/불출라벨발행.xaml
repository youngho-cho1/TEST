<ShopFloorUI:ShopFloorCustomWindow
    x:Class="보령.불출라벨발행"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit" 
    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
    xmlns:c1="http://schemas.componentone.com/winfx/2006/xaml"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:local="clr-namespace:보령"
    xmlns:ShopFloorUI="clr-namespace:ShopFloorUI;assembly=ShopFloorUI.Common"
    xmlns:icommon="clr-namespace:LGCNS.iPharmMES.Common;assembly=LGCNS.iPharmMES.Common"
    xmlns:localctrl="clr-namespace:보령.UserControls"
    x:Name="Main"
    mc:Ignorable="d"
    Title="피킹정보조회 및 불출라벨 발행"
    Height="600" Width="800">
    <ShopFloorUI:ShopFloorCustomWindow.Resources>
        <local:불출라벨발행ViewModel x:Key="ViewModel"/>
        <Style x:Key="SearchCaption" TargetType="sdk:Label">
            <Setter Property="Foreground" Value="#FFFFFDFD"/>
            <Setter Property="FontSize" Value="13.333"/>
            <Setter Property="FontFamily" Value="Malgun Gothic" />
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="2"/>
        </Style>
        <Style x:Key="HeaderStyle" TargetType="c1:DataGridColumnHeaderPresenter">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>
    </ShopFloorUI:ShopFloorCustomWindow.Resources>

    <toolkit:BusyIndicator IsBusy="{Binding IsBusy, UpdateSourceTrigger=PropertyChanged}" DataContext="{Binding Source={StaticResource ViewModel}}">
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="Loaded">
                <i:InvokeCommandAction Command="{Binding LoadedCommandAsync}" CommandParameter="{Binding ElementName=Main}"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>
        <Grid x:Name="LayoutRoot" Margin="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="60"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>
            <Grid x:Name="Header" Grid.Row="0">
                <!--<Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.1*"/>
                    <ColumnDefinition Width="0.2*"/>
                    <ColumnDefinition Width="0.1*"/>
                    <ColumnDefinition Width="0.2*"/>
                    <ColumnDefinition Width="0.1*"/>
                    <ColumnDefinition Width="0.2*"/>
                </Grid.ColumnDefinitions>
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF96CE23"/>
                        <GradientStop Color="#FF8CC203" Offset="0.096"/>
                        <GradientStop Color="#FF7FAF06" Offset="0.983"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <sdk:Label Grid.Column="0" Content="배치 번호"  VerticalAlignment="Center" HorizontalAlignment="Right" Style="{StaticResource SearchCaption}"  />
                <TextBox Grid.Column="1" VerticalAlignment="Center" Text="{Binding Path=BatchNo}" Margin="5" IsReadOnly="True"  />
                <sdk:Label Grid.Column="2" Content="오더 번호"  VerticalAlignment="Center" HorizontalAlignment="Right" Style="{StaticResource SearchCaption}" />
                <TextBox Grid.Column="3" VerticalAlignment="Center" Text="{Binding Path=OrderNo}" Margin="5" IsReadOnly="True"  />
                <sdk:Label Grid.Column="4" Content="단위공정명"  VerticalAlignment="Center" HorizontalAlignment="Right" Style="{StaticResource SearchCaption}" />
                <TextBox Grid.Column="5" VerticalAlignment="Center" Text="{Binding Path=ProcessSegmentName}" Margin="5" IsReadOnly="True"  />-->
                <localctrl:CustomUIHeader CurOrder="{Binding ElementName=Main, Path=CurrentOrder}"
                                          OrderList="{Binding OrderList, Mode=TwoWay}"
                                          CanSelectOrderNo="{Binding CanSelectOrder, Mode=TwoWay}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="OrderNoSelection_Changed">
                            <i:InvokeCommandAction Command="{Binding OrderChagedCommandAsync}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </localctrl:CustomUIHeader>
            </Grid>
            <Grid x:Name="MainSection" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="150"/>
                </Grid.RowDefinitions>
                <c1:C1DataGrid  Grid.Row="0"
                        x:Name="dgMaterials"
                        AutoGenerateColumns="False"
                        SelectionMode="SingleRow"
                        CanUserAddRows="False" 
                        GridLinesVisibility="All"  
                        RowBackground="White"
                        RowHeight="30"
                        FontSize="14"
                        ScrollMode="RealTime"
                        ItemsSource="{Binding Path=BR_BRS_GET_UDT_ProductionOrderPickingInfo_Solution.OUTDATAs, UpdateSourceTrigger=PropertyChanged}" CanUserEditRows="False" HeadersVisibility="Column" >
                    <c1:C1DataGrid.Columns>
                        <c1:DataGridTemplateColumn>
                            <c1:DataGridTemplateColumn.Header>
                                <CheckBox IsThreeState="False" IsChecked="true" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </c1:DataGridTemplateColumn.Header>
                            <c1:DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsThreeState="False" IsChecked="{Binding PRINTFLAG, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </DataTemplate>
                            </c1:DataGridTemplateColumn.CellTemplate>
                        </c1:DataGridTemplateColumn>
                        <c1:DataGridTextColumn Header="자재코드"     Binding="{Binding MTRLID}"           Width="auto" HorizontalAlignment="Stretch" MinWidth="100" HeaderStyle="{StaticResource HeaderStyle}" IsReadOnly="True" />
                        <c1:DataGridTextColumn Header="자재명"       Binding="{Binding MTRLNAME}"         Width="auto" HorizontalAlignment="Stretch" MinWidth="200" HeaderStyle="{StaticResource HeaderStyle}" IsReadOnly="True" />
                        <c1:DataGridTextColumn Header="원료성적번호" Binding="{Binding MLOTID}"           Width="Auto" HorizontalAlignment="Stretch" MinWidth="100" HeaderStyle="{StaticResource HeaderStyle}" IsReadOnly="True" />
                        <c1:DataGridTextColumn Header="피킹순번"     Binding="{Binding QCT_NO_SEQ}"       Width="Auto" HorizontalAlignment="Stretch" MinWidth="50"  HeaderStyle="{StaticResource HeaderStyle}" IsReadOnly="True"/>
                        <c1:DataGridTextColumn Header="자재바코드"   Binding="{Binding MSUBLOTBCD}"       Width="Auto" HorizontalAlignment="Stretch" MinWidth="100" HeaderStyle="{StaticResource HeaderStyle}" IsReadOnly="True"/>
                        <c1:DataGridTextColumn Header="출고량"       Binding="{Binding PICKING_RESV_QTY}" Width="Auto" HorizontalAlignment="Stretch" MinWidth="100" HeaderStyle="{StaticResource HeaderStyle}" IsReadOnly="True"/>
                        <c1:DataGridTextColumn Header="투입준비여부" Binding="{Binding ISAVAIL}"          Width="Auto" HorizontalAlignment="Stretch" MinWidth="80"  HeaderStyle="{StaticResource HeaderStyle}" IsReadOnly="True"/>
                    </c1:C1DataGrid.Columns>
                </c1:C1DataGrid>
                <Grid x:Name="PrinterSection" Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" HorizontalAlignment="Left" Orientation="Horizontal">
                        <sdk:Label Content="선택한 프린터" Margin="5"/>
                        <TextBox x:Name="txtPrinter" Text="{Binding PrintName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" IsReadOnly="True" MinWidth="150" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Center"/>
                    </StackPanel>
                    <c1:C1DataGrid x:Name="PrinterList" Grid.Row="1" HeadersVisibility="Column"
                                   SelectionMode="SingleRow" AutoGenerateColumns="False" CanUserAddRows="False" CanUserEditRows="False" CanUserRemoveRows="False"
                                   ItemsSource="{Binding BR_PHR_SEL_System_Printer.OUTDATAs, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="PrinterList_SelectionChanged">
                        <c1:C1DataGrid.Columns>
                            <c1:DataGridTextColumn Header="프린터명" Binding="{Binding PRINTERNAME}" Width="3*"/>
                            <c1:DataGridTextColumn Header="프린터코드" Binding="{Binding PRINTERID}" Width="*"/>
                        </c1:C1DataGrid.Columns>
                    </c1:C1DataGrid>
                </Grid>
            </Grid>

            <Grid Grid.Row="2" x:Name="Footer" HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="100"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" x:Name="btnPrint" Content="라벨출력" Margin="5" Command="{Binding LabelPrintCommandAsync}"/>
                <Button Grid.Column="1" x:Name="btnConfirm"  Content="기록" Margin="5" Command="{Binding ConfirmCommandAsync}"/>
                <Button Grid.Column="2" x:Name="btnCacel" Content="닫기" Margin="5" Click="btnCacel_Click"/>
            </Grid>
        </Grid>
    </toolkit:BusyIndicator>
</ShopFloorUI:ShopFloorCustomWindow>