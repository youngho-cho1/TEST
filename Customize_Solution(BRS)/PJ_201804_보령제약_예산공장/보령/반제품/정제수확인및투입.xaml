<ShopFloorUI:ShopFloorCustomWindow 
    x:Class="보령.정제수확인및투입"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls"
    xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit" 
    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
    xmlns:c1="http://schemas.componentone.com/winfx/2006/xaml"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:icommon="clr-namespace:LGCNS.iPharmMES.Common;assembly=LGCNS.iPharmMES.Common"    
    xmlns:icontrol="clr-namespace:LGCNS.iPharmMES.Controls;assembly=LGCNS.iPharmMES.Controls"
    xmlns:ShopFloorUI="clr-namespace:ShopFloorUI;assembly=ShopFloorUI.Common"
    xmlns:my="clr-namespace:보령"
    x:Name="Main"
    mc:Ignorable="d"
    Title="정제수(주사용수)확인 및 투입"
    Height="450" Width="1000">
    <ShopFloorUI:ShopFloorCustomWindow.Resources>
        <my:정제수확인및투입ViewModel x:Key="viewModel"/>
        <Style TargetType="Button" x:Key="btnStyle">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Margin" Value="5,0"/>
        </Style>
        <Style x:Key="HeaderStyle" TargetType="c1:DataGridColumnHeaderPresenter">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>
    </ShopFloorUI:ShopFloorCustomWindow.Resources>
    <toolkit:BusyIndicator x:Name="BusyIndicator" IsBusy="{Binding IsBusy}" DataContext="{Binding Source={StaticResource viewModel}}" Background="White">
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="Loaded">
                <i:InvokeCommandAction Command="{Binding LoadedCommand}" CommandParameter="{Binding ElementName=Main}"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>
        <Grid x:Name="LayoutRoot" Background="White" Height="418" VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1.5*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>
            <Grid x:Name="Material" Grid.Row="0" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="90"/>
                    <ColumnDefinition Width="90"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Button Grid.Column="0" Grid.RowSpan="3" Content="자재스캔" x:Name="btnMTRLScan" HorizontalAlignment="Stretch" IsEnabled="False" Margin="5">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding ScanMtrlCommandAsync}" CommandParameter="{Binding ElementName=Main}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <sdk:Label  Grid.Column="1" Grid.Row="0"  Content="자재ID"  HorizontalAlignment="Right" Margin="5,0"/>
                <TextBox Grid.Column="2" Grid.Row="0"  VerticalAlignment="Center"  Text="{Binding Path=MtrlId}" IsReadOnly="True" Margin="5,0"/>
                <sdk:Label Grid.Column="1"  Grid.Row="1"  Content="자재명"   HorizontalAlignment="Right"  Margin="5,0"/>
                <TextBox Grid.Column="2"  Grid.Row="1"  VerticalAlignment="Center"  Text="{Binding Path=MtrlName}" IsReadOnly="True" Margin="5,0"/>
                <sdk:Label Grid.Column="1"  Grid.Row="2"  Content="기준량"   HorizontalAlignment="Right"  Margin="5,0"/>
                <TextBox x:Name="tstStdQty" Grid.Column="2"  Grid.Row="2"  VerticalAlignment="Center"  Text="{Binding Path=StdQty}" IsReadOnly="True" Margin="5,0"/>
                <Rectangle Grid.Row="4" Grid.ColumnSpan="3" Canvas.ZIndex="1" Fill="Transparent" Margin="0,0,0,20"/>
                <c1:C1DataGrid Grid.Row="4" Grid.ColumnSpan="3" Canvas.ZIndex="0" Margin="5"
                               x:Name="dgProductionOutput"
                               SelectionMode="SingleRow" AutoGenerateColumns="False" HeadersVisibility="Column" RowHeight="35"
                               IsReadOnly="True"
                               CanUserAddRows="False"
                               AlternatingRowBackground="White" RowBackground="White"
                               ItemsSource="{Binding Path=filteredComponents}"
                               SelectedItem="{Binding Path=selectedComponent, Mode=TwoWay}">
                    <c1:C1DataGrid.Columns>
                        <c1:DataGridTextColumn  Header="원료배치번호" Width="150" Binding="{Binding Path=MLOTID}" IsReadOnly="True" HorizontalAlignment="Center" HeaderStyle="{StaticResource HeaderStyle}"/>
                        <c1:DataGridTextColumn  Header="No" Width="40"  Binding="{Binding Path=SEQ}" IsReadOnly="True" HorizontalAlignment="Center" HeaderStyle="{StaticResource HeaderStyle}"/>
                        <c1:DataGridTextColumn  Header="칭량기준량"  Width="80" Binding="{Binding Path=MSUBLOTQTY}" IsReadOnly="True" HorizontalAlignment="Right" HeaderStyle="{StaticResource HeaderStyle}"/>
                        <c1:DataGridTextColumn  Header="실제투입량"  Width="80" Binding="{Binding Path=REALQTY}" IsReadOnly="True" HorizontalAlignment="Right" HeaderStyle="{StaticResource HeaderStyle}"/>
                        <c1:DataGridTextColumn  Header="단위"  Width="50"  Binding="{Binding Path=UOMNAME}" IsReadOnly="True" HorizontalAlignment="Center" HeaderStyle="{StaticResource HeaderStyle}"/>
                        <c1:DataGridTextColumn  Header="상태"  Width="55" Binding="{Binding Path=CHECK}" IsReadOnly="True" HorizontalAlignment="Center" HeaderStyle="{StaticResource HeaderStyle}"/>
                    </c1:C1DataGrid.Columns>
                </c1:C1DataGrid>
            </Grid>
            <Grid x:Name="Scale" Grid.Row="0" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="90"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="60"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Button Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Content="저울스캔" HorizontalAlignment="Stretch"  Margin="5" Command="{Binding ScanScaleCommandAsync}" CommandParameter="{Binding ElementName=Main}"/>
                <sdk:Label Grid.Row="0" Grid.Column="1" Content="저울ID" HorizontalAlignment="Left" Margin="5,0"/>
                <sdk:Label Grid.Row="1" Grid.Column="1" Content="{Binding Path=ScaleId, FallbackValue=미설정}" Margin="5"
                           FontSize="23" BorderBrush="Gray" BorderThickness="1"  VerticalAlignment="Stretch"  HorizontalContentAlignment="Center" IsEnabled="False"/>
                <Grid  Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="{Binding Path=UpperWeight, Mode=TwoWay}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="23" FontWeight="Bold"/>
                    <sdk:Label Grid.Row="0" Grid.RowSpan="3" BorderBrush="Gray" BorderThickness="1">
                    <TextBox x:Name="txtScaleValue" Text="{Binding Path=TotalWeight}" TextAlignment="Center" BorderThickness="0"  Grid.Row="0"
                             FontSize="30" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsReadOnly="True"
                             HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ScaleBackground}" MinWidth="395"/>
                    </sdk:Label>
                    <TextBlock Grid.Row="2" Text="{Binding Path=LowerWeight, Mode=TwoWay}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="23" FontWeight="Bold"/>
                </Grid>
            </Grid>
            <Grid x:Name="Footer" Grid.Row="2" Grid.ColumnSpan="2">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                    <TextBlock Text="{Binding Path=W[CUICurrentPrintName], Source={StaticResource viewModel}, FallbackValue='프린트명'}" Margin="2,0"/>
                    <TextBlock Text="{Binding curPrintName, FallbackValue='N/A', UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Margin="5,0" x:Name="btnChangePrint" Width="100" Content="{Binding W[CUIChangePrintButtonText], Source={StaticResource viewModel}, FallbackValue='프린터변경'}" 
                            Style="{StaticResource btnStyle}" Command="{Binding ChangePrintCommand}"/>
                    <Button Margin="5,0" x:Name="btnCharging" Width="100" Content="{Binding W[CUIChargingButtonText], Source={StaticResource viewModel}, FallbackValue='투입'}" 
                            Style="{StaticResource btnStyle}" IsEnabled="{Binding IsCharging}" Command="{Binding ChargingCommandAsync}"/>
                    <Button Margin="5,0" x:Name="btnConfirm" Width="100" Content="{Binding W[CUIDataWriteToEBRButtonText], Source={StaticResource viewModel}, FallbackValue='기록'}" 
                            Style="{StaticResource btnStyle}" IsEnabled="{Binding IsEnabled}" Command="{Binding ConfirmCommandAsync}"/>
                    <Button Margin="5,0" x:Name="btnClose" Width="100" Content="{Binding [CUICloseButtonText], Source={StaticResource viewModel}, FallbackValue='닫기'}"
                            Style="{StaticResource btnStyle}" Click="btnClose_Click"/>
                </StackPanel>
            </Grid>
            <!--<Grid Grid.Row="2" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                    <TextBlock Text="{Binding Path=W[CUICurrentPrintName], Source={StaticResource R}, FallbackValue='프린트명'}" Margin="2,0"/>
                    <TextBlock Text="{Binding curPrintName, FallbackValue='N/A'}"/>
                </StackPanel>
                <Button x:Name="btnChangePrint" Content="프린터변경" Grid.Column="1" Margin="5" Command="{Binding ChangePrintCommand}"/>
                <Button x:Name="btnCharging" Content="투입" Grid.Column="2" Margin="5" Command="{Binding ChargingCommandAsync}" IsEnabled="{Binding IsCharging}"/>
                <Button x:Name="btnConfirm" Content="기록" Grid.Column="3" Margin="5" Command="{Binding ConfirmCommandAsync}" IsEnabled="{Binding IsEnabled}"/>
                <Button x:Name="btnClose" Content="닫기"  Grid.Column="4" Margin="5" Click="btnClose_Click"/>
            </Grid>-->
        </Grid>
    </toolkit:BusyIndicator>
</ShopFloorUI:ShopFloorCustomWindow>
